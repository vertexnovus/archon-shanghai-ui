/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LayoutIndexImport } from './routes/_layout.index'
import { Route as AdminAuthImport } from './routes/admin/_auth'
import { Route as AdminAppImport } from './routes/admin/_app'
import { Route as LayoutLiveImport } from './routes/_layout.live'
import { Route as LayoutHistoryImport } from './routes/_layout.history'
import { Route as AdminAppIndexImport } from './routes/admin/_app/index'
import { Route as AdminAuthSigninImport } from './routes/admin/_auth/signin'
import { Route as AdminAppSettingsImport } from './routes/admin/_app/settings'
import { Route as AdminAppUsersIndexImport } from './routes/admin/_app/users/index'
import { Route as AdminAppSettingsIndexImport } from './routes/admin/_app/settings/index'
import { Route as AdminAppProductsIndexImport } from './routes/admin/_app/products/index'
import { Route as AdminAppSettingsGeneralImport } from './routes/admin/_app/settings/general'
import { Route as AdminAppSettingsBannerImport } from './routes/admin/_app/settings/banner'
import { Route as AdminAppLotteryIdImport } from './routes/admin/_app/lottery/$id'

// Create Virtual Routes

const AdminImport = createFileRoute('/admin')()

// Create/Update Routes

const AdminRoute = AdminImport.update({
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)

const AdminAuthRoute = AdminAuthImport.update({
  id: '/_auth',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAppRoute = AdminAppImport.update({
  id: '/_app',
  getParentRoute: () => AdminRoute,
} as any)

const LayoutLiveRoute = LayoutLiveImport.update({
  path: '/live',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutHistoryRoute = LayoutHistoryImport.update({
  path: '/history',
  getParentRoute: () => LayoutRoute,
} as any)

const AdminAppIndexRoute = AdminAppIndexImport.update({
  path: '/',
  getParentRoute: () => AdminAppRoute,
} as any)

const AdminAuthSigninRoute = AdminAuthSigninImport.update({
  path: '/signin',
  getParentRoute: () => AdminAuthRoute,
} as any)

const AdminAppSettingsRoute = AdminAppSettingsImport.update({
  path: '/settings',
  getParentRoute: () => AdminAppRoute,
} as any)

const AdminAppUsersIndexRoute = AdminAppUsersIndexImport.update({
  path: '/users/',
  getParentRoute: () => AdminAppRoute,
} as any)

const AdminAppSettingsIndexRoute = AdminAppSettingsIndexImport.update({
  path: '/',
  getParentRoute: () => AdminAppSettingsRoute,
} as any)

const AdminAppProductsIndexRoute = AdminAppProductsIndexImport.update({
  path: '/products/',
  getParentRoute: () => AdminAppRoute,
} as any)

const AdminAppSettingsGeneralRoute = AdminAppSettingsGeneralImport.update({
  path: '/general',
  getParentRoute: () => AdminAppSettingsRoute,
} as any)

const AdminAppSettingsBannerRoute = AdminAppSettingsBannerImport.update({
  path: '/banner',
  getParentRoute: () => AdminAppSettingsRoute,
} as any)

const AdminAppLotteryIdRoute = AdminAppLotteryIdImport.update({
  path: '/lottery/$id',
  getParentRoute: () => AdminAppRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/_layout/history': {
      id: '/_layout/history'
      path: '/history'
      fullPath: '/history'
      preLoaderRoute: typeof LayoutHistoryImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/live': {
      id: '/_layout/live'
      path: '/live'
      fullPath: '/live'
      preLoaderRoute: typeof LayoutLiveImport
      parentRoute: typeof LayoutImport
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/admin/_app': {
      id: '/admin/_app'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminAppImport
      parentRoute: typeof AdminRoute
    }
    '/admin/_auth': {
      id: '/admin/_auth'
      path: ''
      fullPath: '/admin'
      preLoaderRoute: typeof AdminAuthImport
      parentRoute: typeof AdminImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutImport
    }
    '/admin/_app/settings': {
      id: '/admin/_app/settings'
      path: '/settings'
      fullPath: '/admin/settings'
      preLoaderRoute: typeof AdminAppSettingsImport
      parentRoute: typeof AdminAppImport
    }
    '/admin/_auth/signin': {
      id: '/admin/_auth/signin'
      path: '/signin'
      fullPath: '/admin/signin'
      preLoaderRoute: typeof AdminAuthSigninImport
      parentRoute: typeof AdminAuthImport
    }
    '/admin/_app/': {
      id: '/admin/_app/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AdminAppIndexImport
      parentRoute: typeof AdminAppImport
    }
    '/admin/_app/lottery/$id': {
      id: '/admin/_app/lottery/$id'
      path: '/lottery/$id'
      fullPath: '/admin/lottery/$id'
      preLoaderRoute: typeof AdminAppLotteryIdImport
      parentRoute: typeof AdminAppImport
    }
    '/admin/_app/settings/banner': {
      id: '/admin/_app/settings/banner'
      path: '/banner'
      fullPath: '/admin/settings/banner'
      preLoaderRoute: typeof AdminAppSettingsBannerImport
      parentRoute: typeof AdminAppSettingsImport
    }
    '/admin/_app/settings/general': {
      id: '/admin/_app/settings/general'
      path: '/general'
      fullPath: '/admin/settings/general'
      preLoaderRoute: typeof AdminAppSettingsGeneralImport
      parentRoute: typeof AdminAppSettingsImport
    }
    '/admin/_app/products/': {
      id: '/admin/_app/products/'
      path: '/products'
      fullPath: '/admin/products'
      preLoaderRoute: typeof AdminAppProductsIndexImport
      parentRoute: typeof AdminAppImport
    }
    '/admin/_app/settings/': {
      id: '/admin/_app/settings/'
      path: '/'
      fullPath: '/admin/settings/'
      preLoaderRoute: typeof AdminAppSettingsIndexImport
      parentRoute: typeof AdminAppSettingsImport
    }
    '/admin/_app/users/': {
      id: '/admin/_app/users/'
      path: '/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AdminAppUsersIndexImport
      parentRoute: typeof AdminAppImport
    }
  }
}

// Create and export the route tree

interface LayoutRouteChildren {
  LayoutHistoryRoute: typeof LayoutHistoryRoute
  LayoutLiveRoute: typeof LayoutLiveRoute
  LayoutIndexRoute: typeof LayoutIndexRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutHistoryRoute: LayoutHistoryRoute,
  LayoutLiveRoute: LayoutLiveRoute,
  LayoutIndexRoute: LayoutIndexRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

interface AdminAppSettingsRouteChildren {
  AdminAppSettingsBannerRoute: typeof AdminAppSettingsBannerRoute
  AdminAppSettingsGeneralRoute: typeof AdminAppSettingsGeneralRoute
  AdminAppSettingsIndexRoute: typeof AdminAppSettingsIndexRoute
}

const AdminAppSettingsRouteChildren: AdminAppSettingsRouteChildren = {
  AdminAppSettingsBannerRoute: AdminAppSettingsBannerRoute,
  AdminAppSettingsGeneralRoute: AdminAppSettingsGeneralRoute,
  AdminAppSettingsIndexRoute: AdminAppSettingsIndexRoute,
}

const AdminAppSettingsRouteWithChildren =
  AdminAppSettingsRoute._addFileChildren(AdminAppSettingsRouteChildren)

interface AdminAppRouteChildren {
  AdminAppSettingsRoute: typeof AdminAppSettingsRouteWithChildren
  AdminAppIndexRoute: typeof AdminAppIndexRoute
  AdminAppLotteryIdRoute: typeof AdminAppLotteryIdRoute
  AdminAppProductsIndexRoute: typeof AdminAppProductsIndexRoute
  AdminAppUsersIndexRoute: typeof AdminAppUsersIndexRoute
}

const AdminAppRouteChildren: AdminAppRouteChildren = {
  AdminAppSettingsRoute: AdminAppSettingsRouteWithChildren,
  AdminAppIndexRoute: AdminAppIndexRoute,
  AdminAppLotteryIdRoute: AdminAppLotteryIdRoute,
  AdminAppProductsIndexRoute: AdminAppProductsIndexRoute,
  AdminAppUsersIndexRoute: AdminAppUsersIndexRoute,
}

const AdminAppRouteWithChildren = AdminAppRoute._addFileChildren(
  AdminAppRouteChildren,
)

interface AdminAuthRouteChildren {
  AdminAuthSigninRoute: typeof AdminAuthSigninRoute
}

const AdminAuthRouteChildren: AdminAuthRouteChildren = {
  AdminAuthSigninRoute: AdminAuthSigninRoute,
}

const AdminAuthRouteWithChildren = AdminAuthRoute._addFileChildren(
  AdminAuthRouteChildren,
)

interface AdminRouteChildren {
  AdminAppRoute: typeof AdminAppRouteWithChildren
  AdminAuthRoute: typeof AdminAuthRouteWithChildren
}

const AdminRouteChildren: AdminRouteChildren = {
  AdminAppRoute: AdminAppRouteWithChildren,
  AdminAuthRoute: AdminAuthRouteWithChildren,
}

const AdminRouteWithChildren = AdminRoute._addFileChildren(AdminRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof LayoutRouteWithChildren
  '/history': typeof LayoutHistoryRoute
  '/live': typeof LayoutLiveRoute
  '/admin': typeof AdminAuthRouteWithChildren
  '/': typeof LayoutIndexRoute
  '/admin/settings': typeof AdminAppSettingsRouteWithChildren
  '/admin/signin': typeof AdminAuthSigninRoute
  '/admin/': typeof AdminAppIndexRoute
  '/admin/lottery/$id': typeof AdminAppLotteryIdRoute
  '/admin/settings/banner': typeof AdminAppSettingsBannerRoute
  '/admin/settings/general': typeof AdminAppSettingsGeneralRoute
  '/admin/products': typeof AdminAppProductsIndexRoute
  '/admin/settings/': typeof AdminAppSettingsIndexRoute
  '/admin/users': typeof AdminAppUsersIndexRoute
}

export interface FileRoutesByTo {
  '/history': typeof LayoutHistoryRoute
  '/live': typeof LayoutLiveRoute
  '/admin': typeof AdminAppIndexRoute
  '/': typeof LayoutIndexRoute
  '/admin/signin': typeof AdminAuthSigninRoute
  '/admin/lottery/$id': typeof AdminAppLotteryIdRoute
  '/admin/settings/banner': typeof AdminAppSettingsBannerRoute
  '/admin/settings/general': typeof AdminAppSettingsGeneralRoute
  '/admin/products': typeof AdminAppProductsIndexRoute
  '/admin/settings': typeof AdminAppSettingsIndexRoute
  '/admin/users': typeof AdminAppUsersIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/_layout/history': typeof LayoutHistoryRoute
  '/_layout/live': typeof LayoutLiveRoute
  '/admin': typeof AdminRouteWithChildren
  '/admin/_app': typeof AdminAppRouteWithChildren
  '/admin/_auth': typeof AdminAuthRouteWithChildren
  '/_layout/': typeof LayoutIndexRoute
  '/admin/_app/settings': typeof AdminAppSettingsRouteWithChildren
  '/admin/_auth/signin': typeof AdminAuthSigninRoute
  '/admin/_app/': typeof AdminAppIndexRoute
  '/admin/_app/lottery/$id': typeof AdminAppLotteryIdRoute
  '/admin/_app/settings/banner': typeof AdminAppSettingsBannerRoute
  '/admin/_app/settings/general': typeof AdminAppSettingsGeneralRoute
  '/admin/_app/products/': typeof AdminAppProductsIndexRoute
  '/admin/_app/settings/': typeof AdminAppSettingsIndexRoute
  '/admin/_app/users/': typeof AdminAppUsersIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/history'
    | '/live'
    | '/admin'
    | '/'
    | '/admin/settings'
    | '/admin/signin'
    | '/admin/'
    | '/admin/lottery/$id'
    | '/admin/settings/banner'
    | '/admin/settings/general'
    | '/admin/products'
    | '/admin/settings/'
    | '/admin/users'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/history'
    | '/live'
    | '/admin'
    | '/'
    | '/admin/signin'
    | '/admin/lottery/$id'
    | '/admin/settings/banner'
    | '/admin/settings/general'
    | '/admin/products'
    | '/admin/settings'
    | '/admin/users'
  id:
    | '__root__'
    | '/_layout'
    | '/_layout/history'
    | '/_layout/live'
    | '/admin'
    | '/admin/_app'
    | '/admin/_auth'
    | '/_layout/'
    | '/admin/_app/settings'
    | '/admin/_auth/signin'
    | '/admin/_app/'
    | '/admin/_app/lottery/$id'
    | '/admin/_app/settings/banner'
    | '/admin/_app/settings/general'
    | '/admin/_app/products/'
    | '/admin/_app/settings/'
    | '/admin/_app/users/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
  AdminRoute: typeof AdminRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
  AdminRoute: AdminRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layout",
        "/admin"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/history",
        "/_layout/live",
        "/_layout/"
      ]
    },
    "/_layout/history": {
      "filePath": "_layout.history.tsx",
      "parent": "/_layout"
    },
    "/_layout/live": {
      "filePath": "_layout.live.tsx",
      "parent": "/_layout"
    },
    "/admin": {
      "filePath": "admin",
      "children": [
        "/admin/_app",
        "/admin/_auth"
      ]
    },
    "/admin/_app": {
      "filePath": "admin/_app.tsx",
      "parent": "/admin",
      "children": [
        "/admin/_app/settings",
        "/admin/_app/",
        "/admin/_app/lottery/$id",
        "/admin/_app/products/",
        "/admin/_app/users/"
      ]
    },
    "/admin/_auth": {
      "filePath": "admin/_auth.tsx",
      "parent": "/admin",
      "children": [
        "/admin/_auth/signin"
      ]
    },
    "/_layout/": {
      "filePath": "_layout.index.tsx",
      "parent": "/_layout"
    },
    "/admin/_app/settings": {
      "filePath": "admin/_app/settings.tsx",
      "parent": "/admin/_app",
      "children": [
        "/admin/_app/settings/banner",
        "/admin/_app/settings/general",
        "/admin/_app/settings/"
      ]
    },
    "/admin/_auth/signin": {
      "filePath": "admin/_auth/signin.tsx",
      "parent": "/admin/_auth"
    },
    "/admin/_app/": {
      "filePath": "admin/_app/index.tsx",
      "parent": "/admin/_app"
    },
    "/admin/_app/lottery/$id": {
      "filePath": "admin/_app/lottery/$id.tsx",
      "parent": "/admin/_app"
    },
    "/admin/_app/settings/banner": {
      "filePath": "admin/_app/settings/banner.tsx",
      "parent": "/admin/_app/settings"
    },
    "/admin/_app/settings/general": {
      "filePath": "admin/_app/settings/general.tsx",
      "parent": "/admin/_app/settings"
    },
    "/admin/_app/products/": {
      "filePath": "admin/_app/products/index.tsx",
      "parent": "/admin/_app"
    },
    "/admin/_app/settings/": {
      "filePath": "admin/_app/settings/index.tsx",
      "parent": "/admin/_app/settings"
    },
    "/admin/_app/users/": {
      "filePath": "admin/_app/users/index.tsx",
      "parent": "/admin/_app"
    }
  }
}
ROUTE_MANIFEST_END */
